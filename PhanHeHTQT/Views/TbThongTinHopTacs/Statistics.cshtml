@model IEnumerable<PhanHeHTQT.Models.TbThongTinHopTac>
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Statistics";
    string labelJson = "", dataJson = "";
    Dictionary<string, int> Times_Thu = new Dictionary<string, int>();
    foreach (var item in Model)
    {
        string hinhthuc = "";
        if (item.IdHinhThucHopTac.HasValue)
        {
            hinhthuc = item.IdHinhThucHopTacNavigation.HinhThucHopTac;
        }
        if (Times_Thu.ContainsKey(hinhthuc)) ++Times_Thu[hinhthuc];
        else Times_Thu[hinhthuc] = 1;
    }
    List<string> label = new List<string>();
    List<int> data = new List<int>();
    foreach (var it in Times_Thu)
    {
        label.Add(it.Key);
        data.Add(it.Value);
    }
    labelJson = JsonConvert.SerializeObject(label);
    dataJson = JsonConvert.SerializeObject(data);
}
<h1>THỐNG KÊ</h1>
    <meta charset="utf-8">
    <title>Visualize Data Beautifully Using JS Charts</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js"></script>
    @section Heads{
    <style>
        th, td {
            text-align: center; /* Canh giữa nội dung trong ô */
            vertical-align: middle; /* Căn giữa nội dung theo chiều dọc */
            font-family: Arial, sans-serif; /* Sử dụng font chữ Arial hoặc sans-serif */
        }

        h1, h3, h4 {
            text-align: center; /* Canh giữa tiêu đề */
        }


        body {
            background-image: url(https://upload.wikimedia.org/wikipedia/vi/8/85/Logo_hoc_vien_ANND.png); /* Đặt hình nền */
            background-size: 150px 150px; /* Kích thước hình nền */
            background-position: top right; /* Đặt vị trí hình nền phía trên */
            background-repeat: no-repeat; /* Không lặp lại hình nền */
            background-color: rgba(128, 148, 219, 1); /* Màu nền mặc định */
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Phông chữ */
            margin-bottom: 90px; /* Khoảng cách dưới cùng */
            margin-top: 90px; /* Khoảng cách trên cùng */
            padding: 0; /* Không có khoảng cách bên trong */
            color: #fff; /* Màu chữ */
        }

        h1 {
            color: white; /* Màu chữ của tiêu đề */
            text-align: center; /* Căn giữa tiêu đề */
            margin-top: 60px;
            margin-bottom: 20px; /* Khoảng cách dưới tiêu đề */
            text-transform: uppercase; /* Chuyển chữ thành in hoa */
            font-weight: bold; /* Chữ in đậm */
        }
        /* Phong cách cho nhãn */
        label {
            font-family: 'Arial', sans-serif;
            font-size: 22px;
            font-weight: bold;
            color: white;
            margin-bottom: 8px;
            display: inline-block;
        }

        /* Phong cách cho dropdown */
        #chartDropdown {
            width: 100%;
            max-width: 500px; /* Giới hạn chiều rộng */
            padding: 12px 16px;
            font-size: 16px;
            font-family: 'Arial', sans-serif;
            color: #333;
            background-color: #f9f9f9;
            border: 2px solid #ddd;
            border-radius: 8px; /* Bo tròn góc */
            outline: none;
            appearance: none; /* Ẩn mũi tên mặc định trên một số trình duyệt */
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Hiệu ứng bóng */
            transition: all 0.3s ease;
        }

            /* Hiệu ứng hover */
            #chartDropdown:hover {
                background-color: #fff;
                border-color: #007BFF;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            }

            /* Hiệu ứng khi focus */
            #chartDropdown:focus {
                border-color: #007BFF;
                box-shadow: 0 0 8px rgba(0, 123, 255, 0.5);
            }

            /* Tùy chỉnh các tùy chọn trong dropdown */
            #chartDropdown option {
                padding: 10px;
                font-size: 14px;
                color: #333;
            }

        .chart-container {
            width: 100%;
            max-width: 1000px;
            margin: 40px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Tạo bóng cho container */
            display: flex;
            flex-direction: column;
            align-items: center;
        }

            .chart-container canvas {
                width: 100%; /* Đảm bảo biểu đồ chiếm toàn bộ chiều rộng */
                height: 500px; /* Chiều cao của biểu đồ */
            }
        /* Hiệu ứng cho tiêu đề */
        h1 {
            font-family: 'Arial', sans-serif;
            font-size: 40px;
            color: white;
            margin-bottom: 20px;
        }

        #myChart1 {
            height: 500px !important; /* Đặt chiều cao cụ thể cho biểu đồ */
        }

    </style>
    }


    <!-- Dropdown -->
    <label for="chartDropdown">Chọn biểu đồ để hiển thị:</label>
    <select id="chartDropdown" style="margin-bottom:100px">
        <option value="">-- Chọn biểu đồ --</option>
        <option value="chart1">Biểu đồ 1: CƠ CẤU HÌNH THỨC HỢP TÁC</option>
        <option value="chart2">Biểu đồ 2: THỐNG KÊ HÌNH THỨC HỢP TÁC</option>
    </select>

    <!-- Khu vực chứa biểu đồ -->
    <div id="chart1" class="chart-container" style=" margin-bottom:100px">
        <canvas id="myChart1"></canvas>
    </div>

    <!-- Biểu đồ 2 -->
    <div id="chart2" class="chart-container" style="display:none; margin-bottom:100px">
        <canvas id="myChart2"></canvas>
    </div>

    <script>
        // Dữ liệu từ Razor
        const labels = @Html.Raw(labelJson);
        const data = @Html.Raw(dataJson);

        // Cấu hình Biểu đồ tròn
        const ctx1 = document.getElementById('myChart1').getContext('2d');
        const chart1 = new Chart(ctx1, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    data: data,
                    backgroundColor: ['rgba(33, 150, 243, 0.8)', 'rgba(56, 142, 60, 0.8)', 'rgba(253, 216, 53, 0.8)',
                        'rgba(255, 87, 34, 0.8)', 'rgba(103, 58, 183, 0.8)', 'rgba(0, 188, 212, 0.8)',
                        'rgba(255, 64, 129, 0.8)', 'rgba(158, 158, 158, 0.8)', 'rgba(245, 34, 45, 0.8)',
                        'rgba(0, 150, 136, 0.8)', 'rgba(121, 85, 72, 0.8)', 'rgba(253, 216, 53, 0.8)',
                        'rgba(21, 101, 192, 0.8)', 'rgba(0, 105, 92, 0.8)', 'rgba(96, 125, 139, 0.8)'],
                    borderWidth: 1
                }]
            },
            options: {
                title: {
                    display: true,
                    text: 'CƠ CẤU HÌNH THỨC HỢP TÁC',
                    fontSize: 25
                },
                maintainAspectRatio: false,// Để thu phóng tự do
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Biểu đồ phân loại theo ca'
                    }

                }
            }
        });

        // Cấu hình Biểu đồ cột
        const ctx2 = document.getElementById('myChart2').getContext('2d');
        const chart2 = new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Lượt hợp tác',
                    data: data,
                    backgroundColor: (function () {
                        const dataArray = @Html.Raw(dataJson);
                        return new Array(dataArray.length).fill('rgb(30,41,107)');
                    })(),
                    borderWidth: 1,
                    borderColor: '#777',
                    hoverBorderWidth: 3,
                    hoverBorderColor: '#000',
                    barThickness: 10,
                }]
            },
            options: {
                responsive: true,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }],
                    xAxes: [{
                        ticks: {
                            autoSkip: false,
                            fontSize: 16,
                            callback: function (value) {
                                let words = value.split(' ');
                                let lines = [];
                                let line = '';
                                words.forEach(word => {
                                    if ((line + word).length > 15) {
                                        lines.push(line.trim());
                                        line = '';
                                    }
                                    line += word + ' ';
                                });
                                if (line) lines.push(line.trim());
                                return lines;
                            }
                        }
                    }],
                },
                title: {
                    display: true,
                    text: 'THỐNG KÊ HÌNH THỨC HỢP TÁC',
                    fontSize: 25
                },
                legend: {
                    display: true,
                    position: 'right',
                    labels: {
                        fontColor: '#000'
                    }
                }
            }
        });

        // Lấy dropdown và các container biểu đồ
        const chartDropdown = document.getElementById('chartDropdown');
        const chartContainers = document.querySelectorAll('.chart-container');

        // Lắng nghe sự kiện thay đổi trên dropdown
        chartDropdown.addEventListener('change', function () {
            // Ẩn tất cả các biểu đồ
            chartContainers.forEach(container => container.style.display = 'none');

            // Hiển thị biểu đồ được chọn
            const selectedChartId = chartDropdown.value;
            if (selectedChartId) {
                const selectedChart = document.getElementById(selectedChartId);
                if (selectedChart) {
                    selectedChart.style.display = 'block';
                }
            }
        });

    </script>
